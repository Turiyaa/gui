{"version":3,"sources":["assets/alert.png","assets/smartron-logo.png","components/Exam.js","components/ExamList.js","components/Header.js","components/Home.js","components/ResultsPage/StudentTable.js","components/ResultsPage/QuestionTable.js","components/ResultsPage/StatsTable.js","components/ResultsPage/Tabs.js","components/ResultsPage/Results.js","components/Login.js","components/AnswerKey.js","components/Router.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["module","exports","__webpack_require__","p","Exam","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title1","text","problem","console","log","navResults","bind","assertThisInitialized","navAnswerKey","history","push","pathname","loginName","exams","list","email","react_default","a","createElement","className","src","logo","height","onClick","alert","Component","ExamList","Fragment","children","Header","onClickclassName","Home","exams2","random","newName","newNum","swap","generateCode","handleName","handleNum","sort","_this2","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","setRequestHeader","send","location","length","setState","ex2","examJSON","examList","forEach","exam","components_Exam","examName","scanCode","reverse","id","i","charAt","Math","floor","event","target","value","tmp","_this3","reactjs_popup_es","onClose","onOpen","modal","trigger","close","name","onChange","numQuest","components_ExamList","components_Header","rows","studentJSON","students","student","grade","total_points","percent","createData","points","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","questionJSON","questionlist","question","data","q","number","response","questionNumber","statsJSON","gradeDistribution","stat","TabContainer","_ref","dir","Typography_default","style","padding","data1","COLORS","CenteredTabs","handleChange","_React$createElement","_React$createElement2","_this$props","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","variant","Tab_default","label","lib_default","axis","direction","index","onChangeIndex","dist_default","ResultsPage_StatsTable","es6","strokeDasharray","dataKey","defineProperty","entry","concat","fill","ResultsPage_QuestionTable","ResultsPage_StudentTable","React","backgroundColor","withTheme","Results","paddingLeft","ResultsPage_Tabs","container","document","body","appendChild","Login","responseGoogleSucc","getBasicProfile","getEmail","getName","responseGoogleFail","google_login","clientId","buttonText","onFailure","onSuccess","AnswerKey","answerKeys","keyOptions","chkbox","updateAnswerKey","copyOfAnswerKey","makeCopy","handleClick","handleSubmit","copyAnswerKey","postAnswerKey","fetch","headers","mode","then","json","result","keys","item","dupeAnswerKey","JSON","parse","stringify","answerKey","indexOf","updateList","filter","obj","questionId","anserKeyObj","find","e","k","type","defaultChecked","includes","htmlFor","Router","BrowserRouter","Route","exact","path","App","components_Router","isLocalhost","Boolean","window","hostname","match","register","config","navigator","URL","process","href","origin","swUrl","contentType","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","error","ReactDOM","render","basename","components_App","getElementById"],"mappings":"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","file":"static/js/main.a1c3dc56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.a453f81d.png\";","module.exports = __webpack_public_path__ + \"static/media/smartron-logo.613fdbf0.png\";","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport alert from '../assets/alert.png';\nimport '../css/exam.css';\nclass Exam extends Component{\n    constructor(props) {\n        super()\n        this.state = {\n            title1: props.text,\n            problem: props.problem\n\n        }\n        console.log(props.problem)\n\n        this.navResults = this.navResults.bind(this);\n        this.navAnswerKey = this.navAnswerKey.bind(this);\n    }\n\n\n\n\n    navResults(){\n        // createBrowserHistory().push(\"/results\");\n        this.props.history.push({pathname:\"/results\",state:{text:this.state.title1 ,loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n\n    navAnswerKey(){\n      this.props.history.push({pathname:\"/answerKey\",state:{text:this.state.title1, loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n    render() {\n        return(\n            <div>\n                <div className={\"exam\"}>\n                    {this.state.title1}\n                    <a className={\"editName\"}><img src={logo} height={25} /></a>\n                    <button onClick={this.navResults}>View Results</button>\n                    <button onClick={this.navAnswerKey}>Edit Answer Key</button>\n\n                    {this.props.problem ? <img className={\"alert\"} src={alert} height={25} /> : null}\n\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\nexport default Exam;\n","import React, { Component } from 'react';\nimport Exam from \"./Exam\";\n\nclass ExamList extends Component{\n    constructor(props) {\n        super();\n        this.state ={\n            list:props.exams,\n            loginName:props.loginName,\n            email:props.email\n\n        }\n\n    }\n    render() {\n\n\n        return(\n            <>{this.props.children}</>\n\n        )\n    }\n\n}\nexport default ExamList;\n/*\n*       const children =React.children.map(this.props.children,child =>{\n            return React.cloneElement(child,{\n                list:this.state.list,\n                loginName:this.state.loginName,\n                email:this.state.email\n            });\n        });\n* */","import React, {Component} from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    render(){\n    return(\n      <header className={\"topBar\"}>\n      <h1 className={\"leftA\"}>SMART</h1><h1 className={\"leftB\"}>RON</h1>\n      <h1 className={\"right\"}>{this.props.email} </h1>\n      <img className = \"logout\" onClickclassName={\"logout\"} src={logo} height={40} />\n      </header>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport Exam from \"./Exam\";\nimport ExamList from \"./ExamList\"\nimport examJSON from \"../JSON/Mainpage\"\nimport Popup from \"reactjs-popup\";\nimport Header from \"./Header\";\n\nclass Home extends Component {\n    //Constructor binds methods and creates an exam list used by the ExamList component\n    constructor(props) {\n        super()\n\n        this.state = {\n            exams:[],\n            exams2:[],\n            random:\"\",\n            newName:\"\",\n            newNum:\"\",\n            swap:false\n        }\n\n        this.generateCode =this.generateCode.bind(this)\n        this.handleName = this.handleName.bind(this)\n        this.handleNum = this.handleNum.bind(this)\n        this.sort = this.sort.bind(this)\n\n    }\n    componentDidMount() {\n      var data = null;\n\n      var xhr = new XMLHttpRequest();\n      xhr.withCredentials = false;\n\n      xhr.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          console.log(this.responseText);\n        }\n      });\n\n      xhr.open(\"GET\", \"http://129.3.20.26:8081/Smartron/smartron/examlist\");\n      xhr.setRequestHeader('mode','no-cors');\n      xhr.send(data);\n\n        if(this.props.location.state.exams.length>0){\n          console.log(data);\n          console.log(\"hello\");\n            this.state.exams = this.props.location.state.exams\n            this.setState(this.state)\n        }else {\n\n            this.setState(this.state)\n            var ex1 = []\n            var ex2 = []\n            examJSON.examList.forEach((exam) =>\n                this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} list={[]}\n                               email={this.props.location.state.email} text={exam.examName} scanCode={exam.scanCode}\n                               history={this.props.history}/>)\n            );\n            this.setState(this.state)\n\n            this.state.exams.forEach((exam) =>\n               ex2.push(<Exam problem={false} loginName={this.props.location.state.loginName} list={[]}\n                              email={this.props.location.state.email} text={exam.props.text} scanCode={exam.props.scanCode}\n                              history={this.props.history}/>)\n\n            );\n\n            this.state.exams = ex2\n            this.state.exams2= ex2.reverse()\n                this.setState(this.state)\n        }\n    }\n\n\n\n\n\n    generateCode(){\n        var id = \"\"\n        var poss = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        for (let i = 0; i < 5; i++) {\n            id += poss.charAt(Math.floor(Math.random()*25))\n        }\n        console.log(id)\n        this.state.random = id\n        this.setState(this.state)\n    }\n    handleName(event) {\n        this.setState({newName: event.target.value});\n    }\n    handleNum(event) {\n        this.setState({newNum: event.target.value});\n    }\n    sort(){\n        var tmp = this.state.swap\n        this.state.swap = !tmp\n        this.setState(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"welcome\"}> Welcome, {this.props.location.state.loginName}</h1>\n                <div className={\"buttons\"}>\n                    <Popup  onClose={()=>{this.setState(this.state)}} onOpen={this.generateCode} modal trigger={<button   className={\"scanButton\"}>New Test Scan</button>}>\n                        {close =>\n                            <div className={\"modal\"}>\n\n                                <h1> New Test Scan</h1>\n                                <form>\n                                    <label> Enter name of test: <input name={\"newName\"} value={this.state.newName}\n                                                                       onChange={this.handleName}/></label> <br/>\n                                    <label> Enter number of questions: <input name={\"newNum\"} value={this.state.newNum}\n                                                                              onChange={this.handleNum}/></label>\n                                </form>\n\n                                <Popup onOpen={this.generateCode} modal trigger={<button>Submit</button>}>\n                                    <h1 className={\"id\"}>{this.state.random}</h1>\n                                    <p className={\"scanCode\"}>Scan Code</p>\n                                    <p>\n\n                                        1. Enter this code in the NAME FIELD of the ANSWER KEY scantron <br/>\n\n\n                                        2. Only enter 25 SCANTRONS in the scanner at a time <br/>\n                                        3. Place ANSWER KEY scantron on the TOP of each pile of answer sheets <br/>\n\n                                    </p>\n                                    <button onClick={() => {\n                                        this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} email={this.props.location.state.email} list={[]} text={this.state.newName} id={this.state.random} numQuest={this.state.newNum} history={this.props.history}/>); this.setState(this.state)\n                                        close()\n                                    }}>Ok\n                                    </button>\n                                </Popup>\n                            </div>\n                        }\n                    </Popup>\n                    <select className={\"select\"} onChange={this.sort}><option value={\"recent\"}>Most Recent </option> <option value={\"alpha\"}>Alphanumeric</option></select>\n                </div>\n                {this.state.swap ? <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams}</ExamList> : <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams2}</ExamList>}\n\n                <Header email={this.props.location.state.email}/>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport studentJSON from '../../JSON/Bystudent';\n\nconst styles = theme => ({\n    root: {\n        width: '80%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 500,\n    },\n});\n\nlet id = 0;\nfunction createData(student, grade, total_points, percent) {\n    id += 1;\n    return { student, grade, total_points, percent };\n}\n\nconst rows = [];\n\nstudentJSON.students.forEach((student) => {\n    rows.push(createData(student.name, student.grade, student.points, student.percent));\n});\n\nfunction StudentTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Student</TableCell>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Total Points</TableCell>\n                        <TableCell align=\"center\">Percent %</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.student}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.grade}</TableCell>\n                            <TableCell align=\"center\">{row.total_points}</TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStudentTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport questionJSON from '../../JSON/Byquestion';\n\nconst styles = theme => ({\n    root: {\n        width: '40%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(number, response, percent) {\n    id += 1;\n    return { number, response, percent };\n}\n\nconst rows = [];\n\nquestionJSON.questionlist.forEach((question) => {\n    question.data.forEach((q) => {\n        rows.push(createData(question.questionNumber, q.name, q.value));\n    });\n});\n\nfunction QuestionTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Question Number</TableCell>\n                        <TableCell >1</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell >Response</TableCell>\n                        <TableCell >Frequency</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.response}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nQuestionTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(QuestionTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport statsJSON from '../../JSON/Statistics';\n\nconst styles = theme => ({\n    root: {\n        width: '50%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data.push(createData(stat.grade, stat.percent));\n});\n\nfunction StatsTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Percent Score</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.grade}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStatsTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StatsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Cell, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport StudentTable from './StudentTable';\nimport Center from 'react-center';\nimport QuestionTable from \"./QuestionTable\";\nimport statsJSON from '../../JSON/Statistics';\nimport StatsTable from './StatsTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n            {children}\n        </Typography>\n    );\n}\n\nconst data = [\n    { \"name\": \"A\", \"value\": 10 },\n    { \"name\": \"B\", \"value\": 20 },\n    { \"name\": \"C\", \"value\": 5 },\n    { \"name\": \"D\", \"value\": 2 },\n    { \"name\": \"E\", \"value\": 1 }\n];\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data1 = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data1.push(createData(stat.grade, stat.percent));\n});\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#fff',\n        width: 1000,\n    },\n});\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#E6E6FA'];\n\nclass CenteredTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"#fff\">\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Statistics Report\" />\n                        <Tab label=\"By Question\" />\n                        <Tab label=\"By Student\" />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={this.state.value}\n                    onChangeIndex={this.handleChange}\n                >\n                    <TabContainer dir={theme.direction}>\n                        <Center><StatsTable /></Center>\n                        <p> </p>\n                        <Center>\n                            <BarChart width={700} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center>\n                            <QuestionTable />\n                            <BarChart width={400} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center><StudentTable /></Center>\n                    </TabContainer>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\nCenteredTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CenteredTabs);\n","import React, { Component } from 'react';\nimport '../../css/App.css';\nimport'../../css/styles.css';\n//import {Link} from \"react-router-dom\";\nimport Tabs from './Tabs';\nimport Center from 'react-center';\nimport Header from \"../Header\";\n\nclass Results extends Component {\n    render() {\n        return (\n            <div>\n                <Header email={this.props.location.state.email}/>\n                <h1 style={{ color: '#00ccbc', paddingLeft: '50px' }}>Results</h1>\n                <p style={{ color: '#00ccbc', paddingLeft: '50px' }}>{this.props.location.state.text}</p>\n                <Center><Tabs /></Center>\n            </div>\n\n        );\n    }\n}\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\n\nexport default Results;\n\n/*\n        <Link to={'/home'} style={{ textDecoration: 'none', color: '#003C60'}}>&lt;Back to Dashboard</Link>\n* */\n","import React, { Component } from 'react';\nimport logo from '../assets/smartron-logo.png';\nimport '../css/App.css';\nimport {GoogleLogin} from \"react-google-login\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    responseGoogleSucc = (response) => {\n        console.log(response.getBasicProfile().getEmail())\n        this.props.history.push({pathname:\"/home\", state:{loginName:response.getBasicProfile().getName(), email:response.getBasicProfile().getEmail(),exams:[]}});\n    }\n\n    responseGoogleFail = (response) => {\n        console.log(\"Error Signing in\")\n    }\n\n    render() {\n        return (\n            <div className={\"loginButton\"}>\n                <img src={logo} height={400}/>\n                <p>Welcome to SMARTron, please login with your LakerNet account</p>\n                <GoogleLogin\n                    clientId=\"424043128457-fqph89obhe0uqo1fqeerkkb74a3l6dkq.apps.googleusercontent.com\"\n                    buttonText=\"Login with your LakerNet ID\"\n                    onFailure={this.responseGoogleFail}\n                    onSuccess={this.responseGoogleSucc}\n                    className={\"button\"}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../css/answerkey.css';\nimport Header from '../components/Header';\nclass AnswerKey extends Component{\nconstructor(){\n  super();\n  this.state = {\n    answerKeys: [],\n    keyOptions: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n    chkbox: false,\n    updateAnswerKey: [],\n    copyOfAnswerKey: [],\n    makeCopy: true,\n    examList:[],\n    loginName:\"\",\n    email:\"\"\n  };\n  this.handleClick = this.handleClick.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.copyAnswerKey = this.copyAnswerKey.bind(this);\n  this.postAnswerKey = this.postAnswerKey.bind(this);\n}\n\ncomponentDidMount(){\n  fetch('http://129.3.20.26:1312/SMARTron/rest/answerkey',{\n    headers:{\n      'mode': 'no-cors'\n    }\n  })\n  .then(response => response.json())\n  .then(result => {\n    const keys = result.map(item => {\n      return item;\n    })\n    this.setState({\n      answerKeys: keys,\n    })\n  });\n}\n\ncopyAnswerKey(){\n  let dupeAnswerKey = JSON.parse(JSON.stringify(this.state.answerKeys));\n  this.setState({\n    makeCopy:false,\n    copyOfAnswerKey:dupeAnswerKey\n  });\n}\n\nhandleClick(item, key){\n  if(this.state.makeCopy){\n    this.copyAnswerKey();\n  }\n  var index = item.answerKey.indexOf(key);\n  item.answerKey = [];\n  item.answerKey.push(key);\n//    if(item.answerKey.includes(key)){\n//      item.answerKey.splice(index,1);\n//    }else{\n//      item.answerKey.push(key);\n//    }\n    console.log();\n  if(this.state.updateAnswerKey.length === 0){\n    this.state.updateAnswerKey.push(item);\n  }\n\n  let updateList = this.state.updateAnswerKey;\n  updateList = updateList.filter(function( obj ){\n  return obj.questionId !== item.questionId});\n\n  let anserKeyObj = this.state.copyOfAnswerKey\n    .find(obj => obj.questionId === item.questionId);\n    item.answerKey.sort();\n\n  if(JSON.stringify(item) !== JSON.stringify(anserKeyObj)){\n    updateList.push(item);\n  }\n  this.setState({\n    updateAnswerKey:updateList\n  });\n}\n\nhandleSubmit(e){\n  this.props.history.push({pathname:\"/home\", state:{loginName:this.props.location.state.loginName, email:this.props.location.state.email,exams:this.props.location.state.exams}});\n  console.log(\"handle on submit here\")\n  console.log(this.state.copyOfAnswerKey);\n  console.log(this.state.updateAnswerKey);\n  this.postAnswerKey();\n}\n\npostAnswerKey(){\nvar data = JSON.stringify(this.state.answerKeys);\nconsole.log(data);\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"http://localhost:8080/SMARTron/smartron/updateAnswerKey\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.send(data);\n}\n\n  render(){\n    return (\n      <div>\n        <div>\n        </div>\n      <div align = \"right\">\n          <h1 className = \"answerKeyTitle\" align = \"center\">Answer Key</h1>\n          <h1 className = \"examName\" align = \"center\">{this.props.location.state.text}</h1>\n            <div className = \"items\">\n              {this.state.answerKeys.map( item => (\n                <div align = \"center\" className ={item.answerKey.length !== 0? \"item\": \"itemEmpty\"}>\n                  <div key ={item.questionId}>\n                    <div className=\"keyBox\">\n                      <span className=\"questionId\">\n                        {item.questionId}\n                      </span>\n                        {this.state.keyOptions.map(k =>(\n                          <span>\n                            <input\n                              type=\"checkbox\"\n                              value={item.questionId}\n                              id ={item.questionId+k}\n                              name=\"\"\n                              defaultChecked={item.answerKey.includes(k) ? true : false}\n                              onClick={() => this.handleClick(item, k)}/>\n                              <label htmlFor={item.questionId+k}>{k}</label>\n                            </span>\n                          ))}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n              <button className= \"float\"\n                     onClick={() => this.handleSubmit()}>Submit</button>\n            </div>\n          <Header email={this.props.location.state.email}/>\n\n      </div>\n\n          );\n        }\n}\nexport default AnswerKey\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport Results from \"./ResultsPage/Results\";\nimport Login from \"./Login\";\nimport AnswerKey from \"./AnswerKey\";\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div style={{ height: \"100%\" }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route exact path=\"/results\" component={Results} />\n                    <Route exact path=\"/answerKey\" component={AnswerKey}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Router from '../components/Router'\nimport ReactDOM from 'react-dom';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loginName:\"hey\"\n        }\n    }\n    render() {\n        return (\n            <Router/>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\nserviceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}